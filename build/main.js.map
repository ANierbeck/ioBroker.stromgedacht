{
  "version": 3,
  "sources": ["../src/main.ts"],
  "sourcesContent": ["/*\n * Created with @iobroker/create-adapter v2.5.0\n */\n\"use strict\";\n\n// The adapter-core module gives you access to the core ioBroker functions\n// you need to create an adapter\nimport * as utils from \"@iobroker/adapter-core\";\nimport axios from \"axios\";\n\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst adapterName = require(\"./../package.json\").name.split(\".\").pop();\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst instanceObjects = require(\"./../io-package.json\").instanceObjects;\n\ninterface State {\n\tfrom: string;\n\tto: string;\n\tstate: number;\n}\n\nclass Stromgedacht extends utils.Adapter {\n\tpublic constructor(options: Partial<utils.AdapterOptions> = {}) {\n\t\tsuper({\n\t\t\t...options,\n\t\t\tname: adapterName,\n\t\t});\n\n\t\tthis.setState(\"info.connection\", false, true);\n\n\t\tthis.on(\"ready\", this.onReady.bind(this));\n\t\tthis.on(\"unload\", this.onUnload.bind(this));\n\t}\n\n\t/**\n\t * Is called when databases are connected and adapter received configuration.\n\t */\n\tasync onReady(): Promise<void> {\n\t\ttry {\n\t\t\tconst instObj = await this.getForeignObjectAsync(`system.adapter.${this.namespace}`);\n\t\t\tif (\n\t\t\t\tinstObj &&\n\t\t\t\tinstObj.common &&\n\t\t\t\tinstObj.common.schedule &&\n\t\t\t\t(instObj.common.schedule === \"11 * * * *\" || instObj.common.schedule === \"*/15 * * * *\")\n\t\t\t) {\n\t\t\t\tinstObj.common.schedule = `${Math.floor(Math.random() * 60)} * * * *`;\n\t\t\t\tthis.log.info(`Default schedule found and adjusted to spread calls better over the full hour!`);\n\t\t\t\tawait this.setForeignObjectAsync(`system.adapter.${this.namespace}`, instObj);\n\t\t\t\tthis.terminate ? this.terminate() : process.exit(0);\n\t\t\t\treturn;\n\t\t\t}\n\t\t} catch (err: any) {\n\t\t\tthis.log.error(`Could not check or adjust the schedule: ${err.message}`);\n\t\t}\n\n\t\tfor (const obj of instanceObjects) {\n\t\t\tawait this.setObjectNotExistsAsync(obj._id, obj);\n\t\t}\n\n\t\t//schedule it to run every 15 minutes\n\t\tthis.log.info(`config zipcode: ${this.config.zipcode}`);\n\n\t\tthis.setState(\"info.connection\", false, true);\n\n\t\tif (this.config.zipcode === undefined || this.config.zipcode === \"\") {\n\t\t\tthis.log.error(\"No zipcode configured\");\n\t\t\treturn;\n\t\t}\n\n\t\tthis.getStatesOf(\"states\", \"\", async (err, states: any) => {\n\t\t\tif (err) {\n\t\t\t\tthis.log.error(`Could not get states of states: ${err.message}`);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tfor (const state of states) {\n\t\t\t\tthis.log.info(`Deleting state ${state._id}`);\n\t\t\t\tawait this.delObjectAsync(state._id);\n\t\t\t}\n\t\t});\n\n\t\tthis.requestStates();\n\t}\n\n\t/**\n\t * Is called when adapter shuts down - callback has to be called under any circumstances!\n\t */\n\tprivate onUnload(callback: () => void): void {\n\t\ttry {\n\t\t\t// Here you must clear all timeouts or intervals that may still be active\n\t\t\t// clearTimeout(timeout1);\n\t\t\t// clearTimeout(timeout2);\n\t\t\t// ...\n\t\t\t// clearInterval(interval1);\n\n\t\t\tcallback();\n\t\t} catch (e) {\n\t\t\tcallback();\n\t\t}\n\t}\n\n\trequestStates(): void {\n\t\tconst zipcode = this.config.zipcode;\n\t\tconst hoursInFuture = this.config.hoursInFuture;\n\n\t\tconst queryParams = {\n\t\t\tzip: zipcode,\n\t\t\thoursInFuture: 24,\n\t\t};\n\n\t\taxios({\n\t\t\tmethod: \"get\",\n\t\t\tbaseURL: \"https://api.stromgedacht.de/v1/statesRelative\",\n\t\t\tparams: queryParams,\n\t\t\ttimeout: 10000,\n\t\t\tresponseType: \"json\",\n\t\t\tvalidateStatus: (status) => status === 200,\n\t\t})\n\t\t\t.then(async (response) => {\n\t\t\t\tthis.log.info(`Received states for ${zipcode}: ${JSON.stringify(response.data)}`);\n\t\t\t\tthis.setState(\"forecast.states.json\", JSON.stringify(response.data), true);\n\t\t\t\tthis.setState(\"forecast.states.hoursInFuture\", hoursInFuture, true);\n\t\t\t\tthis.parseState(response.data);\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tif (error.response) {\n\t\t\t\t\tthis.log.error(`Error: ${error.response.status}`);\n\t\t\t\t} else if (error.request) {\n\t\t\t\t\tthis.log.error(`Error: no data received for Current Weather data`);\n\t\t\t\t} else {\n\t\t\t\t\tthis.log.error(`Error: ${error.message}`);\n\t\t\t\t}\n\t\t\t\tconsole.log(error.config);\n\t\t\t});\n\t\tthis.setState(\"info.connection\", true, true);\n\t}\n\n\tparseState(json: any): void {\n\t\tthis.log.info(`Parsing state ${JSON.stringify(json)}`);\n\t\tlet states: State[] = [];\n\t\t//Object.assign(states, json.states);\n\t\tstates = json.states;\n\t\tthis.log.debug(`States: ${JSON.stringify(states)}`);\n\t\tlet stateId = \"\";\n\t\tstates.forEach((state: any) => {\n\t\t\tswitch (state.state) {\n\t\t\t\tcase -1: //supergruen\n\t\t\t\t\tstateId = \"forecast.states.supergruen\";\n\t\t\t\t\tthis.log.info(`state ${stateId}`);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 1: //gruen\n\t\t\t\t\tstateId = \"forecast.states.gruen\";\n\t\t\t\t\tthis.log.info(`state ${stateId}`);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2: //gelb\n\t\t\t\t\tstateId = \"forecast.states.gelb\";\n\t\t\t\t\tthis.log.info(`state ${stateId}`);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 3: //rot\n\t\t\t\t\tstateId = \"forecast.states.rot\";\n\t\t\t\t\tthis.log.info(`state ${stateId}`);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tthis.log.info(`Setting state ${stateId}.begin to ${state.from}`);\n\t\t\tthis.setState(stateId + \".begin\", state.from, true);\n\t\t\tthis.log.info(`Setting state ${stateId}.end to ${state.to}`);\n\t\t\tthis.setState(stateId + \".end\", state.to, true);\n\t\t});\n\t}\n}\n\nif (require.main !== module) {\n\t// Export the constructor in compact mode\n\tmodule.exports = (options: Partial<utils.AdapterOptions> | undefined) => new Stromgedacht(options);\n} else {\n\t// otherwise start the instance directly\n\t(() => new Stromgedacht())();\n}\n"],
  "mappings": "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",
  "names": ["axios"]
}
